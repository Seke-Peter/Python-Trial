p_str = "I am Good"
dic = {'Peter': 'Coder', 'Sekey': 'Programmer'}
kk = 'rich:' 'comp'
print(p_str.capitalize())
print(p_str.casefold())
print(p_str.center(18, 't'))
print(p_str.count('o'))  # returns the number of the char(s) in the string.
print(p_str.encode())
print(p_str.endswith('d'))
print(p_str.expandtabs())
print(p_str.find('o'))
print('{} is {}'.format("Peter", "Good"))
print(p_str, '{Peter}'.format_map(dic))
print(p_str.index('o'))
print(p_str.isalnum())
print(p_str.isalpha())
print(p_str.isascii())
print(p_str.isdecimal())
print(p_str.isdigit())
print(p_str.isidentifier())
print(p_str.islower())
print(p_str.isnumeric())
print(p_str.isprintable())
print(p_str.isspace())
print(p_str.istitle())
print(p_str.isupper())
print(p_str.join('{}'))
print(p_str.ljust(18, 'a'))
print(p_str.lower())
print(p_str.lstrip('I'))
print(kk.maketrans('rich', 'comp'))
print(p_str.partition('am'))
print(p_str.removeprefix('I'))
print(p_str.removesuffix('Good'))
print(p_str.replace('am', 'for'))
print(p_str.rfind('o'))
print(p_str.rindex('o'))
print(p_str.rjust(18, 'a'))
print(p_str.rpartition('am'))
print(p_str.rsplit('am', 4))
print(p_str.rstrip('d'))
print(p_str.split(' '))
print('Peter, Coder \n Programmer'.splitlines(False))
print(p_str.startswith('I'))
print(kk.strip('r'))
print(p_str.swapcase())
print(p_str.title())
print(p_str.translate(''))
print(p_str.upper())
print(p_str.zfill(18))
# print()
